/* Yacc program to check valid variable followed by letter or digits  */

%{
#include <stdio.h>

int yylex();            /* Declaration for the yylex function generated by Lex */
int yyerror();          /* Declaration for the yyerror function */

int valid = 1;          /* Flag to track if input is a valid identifier */
%}

%token digit letter     /* Token declarations for digit and letter */

%%

start : letter s        /* Start rule: Identifier starts with a letter */
      

s     : letter s        /* Identifier can continue with letters */
      | digit s         /* Identifier can continue with digits */
      |                 /* Empty rule to end the identifier */
      ;

%%

int yyerror()    /* Error handling function */
{
    printf("It's not an identifier\n");
    valid = 0;
    return 0;
}

int main()
{
    printf("Enter a string: ");
    yyparse();          /* Start parsing */
    if (valid)
        printf("It's an identifier\n");
    return 0;
}

/*
        OUTPUT
Enter a string: hello_123
It's an identifier

Enter a string: 12hello
It's not an identifier
*/